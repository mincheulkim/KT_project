<launch>
  <!--240221 사람 크기 타입에 따라 조정: spawn_pedsim_agents.py및 actor_model.sdf 확인-->
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="recording" default="false"/>
  <!-- Note that 'headless' is currently non-functional.  See gazebo_ros_pkgs issue #491 (-r arg does not disable
       rendering, but instead enables recording). The arg definition has been left here to prevent breaking downstream
       launch files, but it does nothing. -->
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <!--환경 불러오는 줄-->
  <!--arg name="world_name" default="TD3.world"/-->
  <!--arg name="world_name" default="U.world"/-->
  <!--arg name="world_name" default="untitle.world"/-->    <!--221117-->
  <!--arg name="world_name" default="cafe.world"/-->  <!--220923 gazebo default cafe-->
  <arg name="world_name" default="warehouse.world"/>  <!--220923 gazebo default cafe-->
  <!--arg name="world_name" default="TD3_empty.world"/-->  <!--220923 gazebo default cafe-->
  <arg name="respawn_gazebo" default="true"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="1000"/>

  
  <param name="camera_description2" command="$(find xacro)/xacro --inorder '$(find multi_robot_scenario)/xacro/camera/cctv2.xacro'"/>
  <node name="camera_spawn2" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param camera_description2 -model camera2 -x -5.3 -y -5.3 -z 2.0"/>
  <param name="camera_description3" command="$(find xacro)/xacro --inorder '$(find multi_robot_scenario)/xacro/camera/cctv3_warehouse.xacro'"/>
  <node name="camera_spawn3" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param camera_description3 -model camera3 -x 0.5 -y -2.3 -z 2.0"/>
  <param name="camera_description4" command="$(find xacro)/xacro --inorder '$(find multi_robot_scenario)/xacro/camera/cctv4_warehouse.xacro'"/>
  <node name="camera_spawn4" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param camera_description4 -model camera4 -x 2.5 -y 5.5 -z 2.0"/>
  <param name="camera_description5" command="$(find xacro)/xacro --inorder '$(find multi_robot_scenario)/xacro/camera/cctv5_warehouse.xacro'"/>
  <node name="camera_spawn5" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param camera_description5 -model camera5 -x 9.5 -y -4.0 -z 3.0"/>


  <!-- set use_sim_time flag -->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  <!-- start gazebo server-->
  <group if="$(arg use_clock_frequency)">
    <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
  </group>
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="screen"
	args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)" />
	
  <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen"/>
  </group>

</launch>
